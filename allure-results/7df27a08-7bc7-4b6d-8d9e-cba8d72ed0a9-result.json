{"name": "test_create_user_invalid_json", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 'data' to be {'field': 'email', 'message': 'has already been taken'}, got [{'field': 'email', 'message': 'has already been taken'}].", "trace": "def test_create_user_invalid_json():\n        \"\"\"Test case for creating a user - negative case with invalid JSON syntax.\"\"\"\n        step_name = \"Create User - Already Existed Email\"\n    \n        request_data = {\n            \"email\": \"7Z96utZH@example.com\",\n            \"name\": \"7Z96utZH\",\n            \"gender\": \"male\",\n            \"status\": \"inactive\",\n        }\n    \n        log_request_data(request_data, step_name)\n    \n        response = requests.post(f\"{BASE_URL}/users\", json=request_data, headers=headers)\n    \n        log_response_data(response, step_name)\n    \n        expected_status_code = 200\n        expected_values = {\n            \"code\": 422,\n            \"meta\": None,\n            \"data\": {\n                \"field\": \"email\",\n                \"message\": \"has already been taken\"\n            }\n        }\n    \n>       log_and_assert(response, expected_status_code, expected_values)\n\nsrc/test_api.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>, expected_status = 200\nexpected_values = {'code': 422, 'data': {'field': 'email', 'message': 'has already been taken'}, 'meta': None}\n\n    def log_and_assert(response, expected_status, expected_values):\n        \"\"\"\n        Log response and assert expected values.\n    \n        Parameters:\n        - response: The HTTP response object.\n        - expected_status: The expected HTTP status code.\n        - expected_values: A dictionary of expected values to assert in the response JSON.\n        \"\"\"\n    \n        log_response_data(response)\n        response_json = response.json()\n    \n        assert response.status_code == expected_status, f\"Expected status code {expected_status}, got {response.status_code}.\"\n    \n        for key, expected_value in expected_values.items():\n            actual_value = response_json.get(key)\n>           assert actual_value == expected_value, f\"Expected '{key}' to be {expected_value}, got {actual_value}.\"\nE           AssertionError: Expected 'data' to be {'field': 'email', 'message': 'has already been taken'}, got [{'field': 'email', 'message': 'has already been taken'}].\n\nsrc/utils/logger_validator.py:30: AssertionError"}, "description": "Test case for creating a user - negative case with invalid JSON syntax.", "steps": [{"name": "Request for Create User - Already Existed Email", "status": "passed", "attachments": [{"name": "Create User - Already Existed Email", "source": "075b73c6-618a-481e-b1fe-1210b4108190-attachment.json", "type": "application/json"}], "start": 1729049732068, "stop": 1729049732069}, {"name": "Response for Create User - Already Existed Email", "status": "passed", "attachments": [{"name": "Create User - Already Existed Email", "source": "e2c3ae69-f027-47d0-b95b-e9f23a4b5d26-attachment.json", "type": "application/json"}], "start": 1729049732458, "stop": 1729049732460}, {"name": "Response for Response", "status": "passed", "attachments": [{"name": "Response", "source": "5b6d0b99-1518-450a-995b-76cb25515fb2-attachment.json", "type": "application/json"}], "start": 1729049732460, "stop": 1729049732460}], "start": 1729049732068, "stop": 1729049732461, "uuid": "421246da-fcb2-4846-8b82-6f497952c178", "historyId": "7ca760caa22fab52195aec27251ef5d5", "testCaseId": "7ca760caa22fab52195aec27251ef5d5", "fullName": "src.test_api#test_create_user_invalid_json", "labels": [{"name": "parentSuite", "value": "src"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "Aras-MacBook-Air.local"}, {"name": "thread", "value": "62926-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.test_api"}]}